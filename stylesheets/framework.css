/* Demonstrates use of custom css. */
/* To start with the list of css selectors can be found here:
https://www.w3schools.com/cssref/css_selectors.asp */

/* Makes the screen scroll smoothly instead of jump between intrapage links. */
html {
  scroll-behavior:smooth;
}

/* * affects all elments. */
/* With :not you can specify an element this css does not apply to.
:not only accepts 1 argument. Thus to negate multiple elements, :not has to
be used more than once. :not may accept multiple elements in future. */
/* Other pseudo classes can be found here:
https://www.w3.org/TR/selectors-3/ */
*:not(button):not(input) {
  /* Text color. */
  color:white;
}

/* Sets limit to text length */
body {
  background-color:black;
  /* Max size of box. */
  max-width:800px;
  /* margin is the distance a box is from other boxes. */
  margin:auto;
}

aside {
  width:40%;
  /* rem is a unit equal to the front size of the root element. */
  /* It is different from em being that em is affected when front size of the
  parent element is changed. */
  /* padding is the distance text is from it's box. */
  padding-left:.5rem;
  /* margin is the distance a box is from other boxes. */
  margin-left:.5rem;
  /* float allows an element to vertically span more than 1 line of text, as
  well as specifies which side of the text it will be. It is none by
  default. */
  float:right;
  /* inset changes the shadow from outside the box to inside. */
  /* The other arguments are x, y, sharpness (optional), size (optional) and
  color (default black). */
  box-shadow:inset 5px 0 5px -5px #66ff99;
}

/* Here we learn what happens when we combine multiple css selectors together */
/* Using target1, target2 is just a shortcut to writing the same css code
for both targets. */
aside, p {}

/* target1target2 means both css selectors must be present for it to take
effect. It is not possible to combine elements with other elements for obvious
reasons, but combining multiple classes is common. */
aside.aside-green p {
  color:#66ff99;
  margin: .5rem;
}

/* target1 target2 selects all target2 whose parents can be traced to target1.
This means target2 may be inside other elements whose parent is target1 */
ol li {
  color:#66ff99;
}

/* target1 > target2 selects all target2 whose immediate parent is target1.
Parent refers to hierarchy and not code positioning. Thus there can be other
elements on the same level between target1 and 2. */
/* When two css overlap, such as this and the previous ol li example, the
later one will take effect. Thus the more general css should come before the
more specific if you want both to apply. */
ol > li {
  color:#ffa500;
}

/* target1 ~ target2 selects all target2 which follow target1 (same level).
This works even if other elements are in between. */
li ~ div {
  color:#66ff99;
}

/* target1 + target2 selects the first target2 which follows target1
(same level). It does not apply if there are other elements in between. */
ul + div {
  color:#ffa500;
}

/* Fonts
--------------------------------------------------------------------------------------------------------------- */
/* load font from file. */
@font-face {
	font-family:'GTWalsheimPro';
  /* Multiple source files can be defined in base browsers do not support one
  or another. local() can be used instead of url() to direct the browser to
  search the user's computer for the font file first. An optional format type
  can be given with each file using format(). Recommended font format order:
  woff2, woff, truetype, svg, eot
  the latter two are for compatibility with iOS 4.1 and below and IE8. */
	src:  url('../webfonts/GT-Walsheim-Pro-Regular.woff') format('woff'),
        url('../webfonts/GT-Walsheim-Pro-Regular.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
}

/* Add additional custom fonts or define bold or italic versions of the same
font by adding more @font-face. */
@font-face {
  /* To add a bold version of the same font, use the same font family. If left
  undefined, browsers may programatically bold the font. */
	font-family:'GTWalsheimPro';
	src:  url('../webfonts/GT-Walsheim-Pro-Bold.woff') format('woff'),
        url('../webfonts/GT-Walsheim-Pro-Bold.ttf') format('truetype');
  font-weight: bold;
  font-style: normal;
}

@font-face {
  /* To add a bold version of the same font, use the same font family. */
	font-family:'GTWalsheimPro';
  src:  url('../webfonts/GT-Walsheim-Pro-Regular-Oblique.woff') format('woff'),
        url('../webfonts/GT-Walsheim-Pro-Regular-Oblique.ttf') format('truetype');
  font-weight: normal;
  /* In most fonts, font-style:italic and font-style:oblique are functionally
  equivalent. When the <i></i> tag is used, browsers will use oblique if italic
  is not defined. If neither is defined, browsers may programatically italize
  the font. */
  font-style: oblique;
}

.google-font-test{font-family:'Roboto';}
/* font-weight:400 is the default value. Smaller is lighter and larger is
bolder. 700 is the equivalent value for bold. */
.file-font-test{font-family:'GTWalsheimPro';font-weight:400;}

/* Demonstrates selecting multiple elements. */
h1, h2, h3, h4, h5, h6, div, p, button {
  text-align:center;
}

ul li, ol li, dl {
  margin-left:20%;
}

/* Images
--------------------------------------------------------------------------------------------------------------- */
/* .align applies this css to all img with class center. */
img.center{display:block; margin-left:auto; margin-right:auto;}
/* While it is possible to write img.resize instead, it appears to be better
practice to create new classes with descriptive names. */
.imgsize-80{max-width:80%; max-height:80%;}
.imgsize-60{max-width:60%; max-height:60%;}
.imgsize-40{max-width:40%; max-height:40%;}
.imgsize-20{max-width:20%; max-height:20%;}
.imgsize-15{max-width:15%; max-height:15%;}
.imgsize-10{max-width:10%; max-height:10%;}

/* Grid - RS-MQF 1200 V.2 - https://www.os-templates.com/free-basic-html5-templates/rs-mqf-1200
--------------------------------------------------------------------------------------------------------------- */
.one_half,
.one_third, .two_third,
.one_quarter, .two_quarter, .three_quarter,
.one_fifth, .two_fifth, .three_fifth, .four_fifth,
.one_sixth, .two_sixth, .three_sixth, .four_sixth, .five_sixth{display:inline; float:left; margin:0 0 0 2%; list-style:none;}

.one_half:first-child,
.one_third:first-child, .two_third:first-child,
.one_quarter:first-child, .two_quarter:first-child, .three_quarter:first-child,
.one_fifth:first-child, .two_fifth:first-child, .three_fifth:first-child, .four_fifth:first-child,
.one_sixth:first-child, .two_sixth:first-child, .three_sixth:first-child, .four_sixth:first-child, .five_sixth:first-child{margin-left:0;}

.first{margin-left:0; clear:left;}

.full_width{display:block; width:100%; clear:both;}

.one_half, .two_quarter, .three_sixth{width:49%;}
.one_third, .two_sixth{width:32%;}
.two_third, .four_sixth{width:66%;}
.one_quarter{width:23.5%;}
.three_quarter{width:74.5%;}
.one_fifth{width:18.4%;}
.two_fifth{width:38.8%;}
.three_fifth{width:59.2%;}
.four_fifth{width:79.6%;}
.one_sixth{width:15%;}
.five_sixth{width:83%;}
